geom_bar(stat="identity",color="black",fill="#263859")+
ylab("Relative Influence")+
xlab("Copy Number Features ")+
theme(line = element_line(color = "black", size = 1,
linetype = 1),
# panel.background  = element_blank(),
axis.text.x  = element_text(size=15,color = "black"),
axis.text.y = element_text(size=15,color = "black"),
axis.line = element_line(colour="black"),
title=element_text(size=15))+
coord_flip()
??sig_tally
### data preparing
cn_pcawg_wgs <- readRDS("~/HRD/HRDCNA/data/cndata/cn_pcawg_wgs.rds")
View(cn_pcawg_wgs)
tally_W_pcawg <- readRDS("~/HRD/HRDCNA/data/tallydata/tally_W_pcawg.rds")
a <- tally_W_pcawg$nmf_matrix
View(a)
wgs67_hrd_PALB2 <- readRDS("~/HRD/yhz_CNHRD/data_new/typedata/wgs67_hrd_PALB2.rds")
wgs67_hrd <- readRDS("~/HRD/yhz_CNHRD/data_new/typedata/wgs67_hrd.rds")
wgs67_hrr_PALB2 <- readRDS("~/HRD/yhz_CNHRD/data_new/typedata/wgs67_hrr_PALB2.rds")
`wgs67_hrr-palb2` <- readRDS("~/HRD/yhz_CNHRD/data_new/typedata/wgs67_hrr-palb2.rds")
wgs67_hrr <- readRDS("~/HRD/yhz_CNHRD/data_new/typedata/wgs67_hrr.rds")
View(wgs67_hrr)
library(tidyverse)
library(ggplot2)
library(caret)
library(pROC)
library(survival)
library(survminer)
library(gbm)
library(precrec)
setwd("~/HRD/HRDCNA/")
churn.gbmtest4 <- readRDS("~/HRD/HRDCNA/data/modeldata/churn.gbmtest4.rds")
bestTree <- readRDS("~/HRD/HRDCNA/data/modeldata/bestTree.rds")
tally_W_wgs <- readRDS("~/HRD/HRDCNA/data/tallydata/tally_W_60wgs.rds")
tally_W_SNP <- readRDS("~/HRD/HRDCNA/data/tallydata/tally_W_60array.rds")
#### score
data <- tally_W_wgs$nmf_matrix
data <- as.data.frame(data)
data.pred = predict(churn.gbmtest4, data, n.trees = bestTree, type = "response")
data.pred <- as.data.frame(data.pred)
data.pred$Sample <- rownames(data)
View(wgs67_hrr)
palb2 <- wgs67_hrr[24, ]
wgs67_hrr <- wgs67_hrr[-24,]
View(palb2)
#### score
data <- tally_W_wgs$nmf_matrix
data <- as.data.frame(data)
data.pred = predict(churn.gbmtest4, data, n.trees = bestTree, type = "response")
data.pred <- as.data.frame(data.pred)
data.pred$Sample <- rownames(data)
data.pred$type <- ifelse(data.pred$Sample %in% wgs67_hrd$Sample, "HRD",
ifelse(data.pred$Sample %in% wgs67_hrr$Sample, "HRP",
ifelse(data.pred$Sample %in% palb2$Sample, "PALB2", "null")))
data.pred <- data.pred %>% filter(type != "null")
colnames(data.pred)[1] <- c("probability")
data_reorder <- data.pred
data_reorder$type <- factor(data_reorder$type,
levels = c("HRD", "HRP", "PALB2"))
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#FFFFFF"))
p5
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#000000"))
p5
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#AAAAAA"))
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#AAAAAA"))
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#AAAAAA"))
p5
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#BBBBBB"))
p5
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#CCCCCC"))
p5
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#c24233"))
p5
p5 <- ggplot(data = data_reorder, mapping = aes(x = reorder(Sample, probability), y = probability, fill = type)) +
geom_bar(stat = "identity") +
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size = 15,color = "black"),
axis.line = element_line(colour = "black"),
axis.ticks.x  = element_blank()) +
xlab("66 WGS Samples") + ylab("Probability Score") +
theme(title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom") + labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77", "#000000"))
p5
rm(a)
rm(list=ls())
library(pROC)
library(ggpubr)
library(ggplot2)
churn.gbmtest4 <- readRDS("./data/modeldata/churn.gbmtest4.rds")
bestTree <- readRDS("./data/modeldata/bestTree.rds")
trainall <- readRDS("./data/modeldata/trainall.rds")
testall <- readRDS("./data/modeldata/testall.rds")
alldata <- readRDS("./data/modeldata/alldata.rds")
tally_W_panel <- readRDS("./data/tallydata/tally_W_panel.rds")
tally_W_wgs <- readRDS("./data/tallydata/tally_W_60wgs.rds")
tally_W_snp <- readRDS("./data/tallydata/tally_W_60array.rds")
panel_all_hrd <- readRDS("./data/typedata/panel_all_hrd.rds")
panel_all_hrr <- readRDS("./data/typedata/panel_all_hrr.rds")
wgs67_hrd <- readRDS("./data/typedata/wgs67_hrd.rds")
wgs67_hrr <- readRDS("./data/typedata/wgs67_hrr.rds")
### ROC
testall$sample <- rownames(testall)
plot.roc(testall$type, testall$`BP10MB[1]`, col='#4a4266',
percent=T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Held-out Dataset:  AUC = %.1f%%",
print.auc.y=25, print.auc.x=75)
trainall$sample <- rownames(trainall)
### ROC
testall$sample <- rownames(testall)
plot.roc(testall$type, testall$`BP10MB[1]`, col='#4a4266',
percent=T,
thresholds="best", # 基于youden指数选择roc曲线最佳阈值点
# print.thres="best"), # 在roc曲线上显示最佳阈值点
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Held-out Dataset:  AUC = %.1f%%",
print.auc.y=25, print.auc.x=75)
plot.roc(testall$type, testall$`BP10MB[1]`, col='#4a4266',
percent=T,
thresholds="best", # 基于youden指数选择roc曲线最佳阈值点
print.thres="best"), # 在roc曲线上显示最佳阈值点
plot.roc(testall$type, testall$`BP10MB[1]`, col='#4a4266',
percent=T,
thresholds="best", # 基于youden指数选择roc曲线最佳阈值点
print.thres="best"), # 在roc曲线上显示最佳阈值点
plot.roc(testall$type, testall$`BP10MB[1]`, col='#4a4266',
percent=T,
print.thres = T, # 基于youden指数选择roc曲线最佳阈), # 在roc曲线上显示最佳阈值点
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Held-out Dataset:  AUC = %.1f%%",
print.auc.y=25, print.auc.x=75)
plot.roc(trainall$type, trainall$`BP10MB[1]`, col="#bc5148",
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Training Dataset: AUC = %.1f%%",
print.auc.y=20, print.auc.x=75, add=T)
### validation
#### count
nmfpanel <- tally_W_panel$nmf_matrix
nmfpanel <- as.data.frame(nmfpanel)
nmfpanel$type <- ifelse(rownames(nmfpanel) %in% panel_all_hrd$`Sample ID`, "1",
ifelse(rownames(nmfpanel) %in% panel_all_hrr$`Sample ID`, "0", "null"))
nmfpanel <- nmfpanel %>% filter(type!="null")
nmfwgs <- tally_W_wgs$nmf_matrix
nmfwgs <- as.data.frame(nmfwgs)
nmfwgs$type <- ifelse(rownames(nmfwgs) %in% wgs67_hrd$Sample, "1",
ifelse(rownames(nmfwgs) %in% wgs67_hrr$Sample, "0", "null"))
nmfwgs <- nmfwgs %>% filter(type!="null")
nmfsnp <- tally_W_snp$nmf_matrix
nmfsnp <- as.data.frame(nmfsnp)
nmfsnp$type <- ifelse(rownames(nmfsnp) %in% wgs67_hrd$Sample, "1",
ifelse(rownames(nmfsnp) %in% wgs67_hrr$Sample, "0", "null"))
nmfsnp <- nmfsnp %>% filter(type!="null")
data <- rbind(nmfpanel, nmfwgs, nmfsnp)
data$sample <- rownames(data)
data <- data %>% pivot_longer(-c("type", "sample"), names_to = "feature",
values_to = "count")
data <- data %>% filter(feature=="BP10MB[1]")
data$type <- ifelse(data$type == "0", "HRP", "HRD")
data_reorder <- data
data_reorder$type <- factor(data_reorder$type, levels = c("HRD","HRP"))
ggplot(data = data_reorder, mapping = aes(x = reorder(sample,count),y=count,fill=type)) +
geom_bar(stat = "identity")+
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size=15,color = "black"),
axis.line = element_line(colour="black"),
axis.ticks.x  = element_blank())+
xlab("633 Samples")+ylab("BP10MB[1]  Count")+
theme(title=element_text(size=15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom")+labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77"))
dtwgs <- nmfwgs
dtwgs$sample <- rownames(dtwgs)
dtsnp <- nmfsnp
dtsnp$sample <- rownames(dtsnp)
dtpanel <- nmfpanel
dtpanel$sample <- rownames(dtpanel)
plot.roc(dtwgs$type, dtwgs$`BP10MB[1]`, col = "#bc5148",
percent=T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="WGS: AUC = %.1f%%",
print.auc.y=30, print.auc.x = 65)
plot.roc(dtwgs$type, dtwgs$`BP10MB[1]`, col = "#bc5148",
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="WGS: AUC = %.1f%%",
print.auc.y=30, print.auc.x = 65)
plot.roc(dtsnp$type, dtsnp$`BP10MB[1]`, col = "#4a4266",
percent=T,thresholds="best",
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="SNP array: AUC = %.1f%%",
print.auc.y=25,  print.auc.x = 65, add=T)
plot.roc(dtpanel$type, dtpanel$`BP10MB[1]`, col = "#549688",
percent=T,thresholds="best",
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Panel: AUC = %.1f%%",
print.auc.y=20, print.auc.x = 65, add=T)
### ROC
testall$sample <- rownames(testall)
plot.roc(testall$type, testall$`BP10MB[1]`, col='#4a4266',
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Held-out Dataset:  AUC = %.1f%%",
print.auc.y=25, print.auc.x=75)
trainall$sample <- rownames(trainall)
plot.roc(trainall$type, trainall$`BP10MB[1]`, col="#bc5148",
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Training Dataset: AUC = %.1f%%",
print.auc.y=20, print.auc.x=75, add=T)
plot.roc(testall$type, testall$`BP10MB[1]`, col='#4a4266',
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Held-out Dataset:  AUC = %.1f%%",
print.auc.y=25, print.auc.x=75)
trainall$sample <- rownames(trainall)
plot.roc(trainall$type, trainall$`BP10MB[1]`, col="#bc5148",
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Training Dataset: AUC = %.1f%%",
print.auc.y=20, print.auc.x=75, add=T)
### validation
#### count
nmfpanel <- tally_W_panel$nmf_matrix
nmfpanel <- as.data.frame(nmfpanel)
nmfpanel$type <- ifelse(rownames(nmfpanel) %in% panel_all_hrd$`Sample ID`, "1",
ifelse(rownames(nmfpanel) %in% panel_all_hrr$`Sample ID`, "0", "null"))
nmfpanel <- nmfpanel %>% filter(type!="null")
nmfwgs <- tally_W_wgs$nmf_matrix
nmfwgs <- as.data.frame(nmfwgs)
nmfwgs$type <- ifelse(rownames(nmfwgs) %in% wgs67_hrd$Sample, "1",
ifelse(rownames(nmfwgs) %in% wgs67_hrr$Sample, "0", "null"))
nmfwgs <- nmfwgs %>% filter(type!="null")
nmfsnp <- tally_W_snp$nmf_matrix
nmfsnp <- as.data.frame(nmfsnp)
nmfsnp$type <- ifelse(rownames(nmfsnp) %in% wgs67_hrd$Sample, "1",
ifelse(rownames(nmfsnp) %in% wgs67_hrr$Sample, "0", "null"))
nmfsnp <- nmfsnp %>% filter(type!="null")
data <- rbind(nmfpanel, nmfwgs, nmfsnp)
data$sample <- rownames(data)
data <- data %>% pivot_longer(-c("type", "sample"), names_to = "feature",
values_to = "count")
data <- data %>% filter(feature=="BP10MB[1]")
data$type <- ifelse(data$type == "0", "HRP", "HRD")
data_reorder <- data
data_reorder$type <- factor(data_reorder$type, levels = c("HRD","HRP"))
ggplot(data = data_reorder, mapping = aes(x = reorder(sample,count),y=count,fill=type)) +
geom_bar(stat = "identity")+
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size=15,color = "black"),
axis.line = element_line(colour="black"),
axis.ticks.x  = element_blank())+
xlab("633 Samples")+ylab("BP10MB[1]  Count")+
theme(title=element_text(size=15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom")+labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77"))
dtwgs <- nmfwgs
dtwgs$sample <- rownames(dtwgs)
dtsnp <- nmfsnp
dtsnp$sample <- rownames(dtsnp)
dtpanel <- nmfpanel
dtpanel$sample <- rownames(dtpanel)
plot.roc(dtwgs$type, dtwgs$`BP10MB[1]`, col = "#bc5148",
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="WGS: AUC = %.1f%%",
print.auc.y=30, print.auc.x = 65)
plot.roc(dtsnp$type, dtsnp$`BP10MB[1]`, col = "#4a4266",
percent=T,thresholds="best",
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="SNP array: AUC = %.1f%%",
print.auc.y=25,  print.auc.x = 65, add=T)
plot.roc(dtpanel$type, dtpanel$`BP10MB[1]`, col = "#549688",
percent=T,thresholds="best",
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Panel: AUC = %.1f%%",
print.auc.y=20, print.auc.x = 65, add=T)
library(pROC)
library(ggpubr)
library(ggplot2)
churn.gbmtest4 <- readRDS("./data/modeldata/churn.gbmtest4.rds")
bestTree <- readRDS("./data/modeldata/bestTree.rds")
trainall <- readRDS("./data/modeldata/trainall.rds")
testall <- readRDS("./data/modeldata/testall.rds")
alldata <- readRDS("./data/modeldata/alldata.rds")
tally_W_panel <- readRDS("./data/tallydata/tally_W_panel.rds")
tally_W_wgs <- readRDS("./data/tallydata/tally_W_60wgs.rds")
tally_W_snp <- readRDS("./data/tallydata/tally_W_60array.rds")
panel_all_hrd <- readRDS("./data/typedata/panel_all_hrd.rds")
panel_all_hrr <- readRDS("./data/typedata/panel_all_hrr.rds")
wgs67_hrd <- readRDS("./data/typedata/wgs67_hrd.rds")
wgs67_hrr <- readRDS("./data/typedata/wgs67_hrr.rds")
### ROC
testall$sample <- rownames(testall)
plot.roc(testall$type, testall$`SS[>7 & <=8]`, col='#4a4266',
percent=T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Held-out Dataset: AUC = %.1f%%",
print.auc.y=25, print.auc.x=75)
trainall$sample <- rownames(trainall)
plot.roc(testall$type, testall$`SS[>7 & <=8]`, col='#4a4266',
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Held-out Dataset: AUC = %.1f%%",
print.auc.y=25, print.auc.x=75)
trainall$sample <- rownames(trainall)
plot.roc(trainall$type, trainall$`SS[>7 & <=8]`, col="#bc5148",
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Training Dataset: AUC = %.1f%%",
print.auc.y=20, print.auc.x=75, add=T)
### validation
#### count
nmfpanel <- tally_W_panel$nmf_matrix
nmfpanel <- as.data.frame(nmfpanel)
nmfpanel$type <- ifelse(rownames(nmfpanel) %in% panel_all_hrd$`Sample ID`, "1",
ifelse(rownames(nmfpanel) %in% panel_all_hrr$`Sample ID`, "0", "null"))
nmfpanel <- nmfpanel %>% filter(type!="null")
nmfwgs <- tally_W_wgs$nmf_matrix
nmfwgs <- as.data.frame(nmfwgs)
nmfwgs$type <- ifelse(rownames(nmfwgs) %in% wgs67_hrd$Sample, "1",
ifelse(rownames(nmfwgs) %in% wgs67_hrr$Sample, "0", "null"))
nmfwgs <- nmfwgs %>% filter(type!="null")
nmfsnp <- tally_W_snp$nmf_matrix
nmfsnp <- as.data.frame(nmfsnp)
nmfsnp$type <- ifelse(rownames(nmfsnp) %in% wgs67_hrd$Sample, "1",
ifelse(rownames(nmfsnp) %in% wgs67_hrr$Sample, "0", "null"))
nmfsnp <- nmfsnp %>% filter(type!="null")
data <- rbind(nmfpanel, nmfwgs, nmfsnp)
data$sample <- rownames(data)
data <- data %>% pivot_longer(-c("type", "sample"), names_to = "feature",
values_to = "count")
data <- data %>% filter(feature=="SS[>7 & <=8]")
data$type <- ifelse(data$type == "0", "HRP", "HRD")
data_reorder <- data
data_reorder$type <- factor(data_reorder$type, levels = c("HRD","HRP"))
ggplot(data = data_reorder, mapping = aes(x = reorder(sample,count),y=count,fill=type)) +
geom_bar(stat = "identity")+
theme(line = element_line(color = "black", size = 1,
linetype = 1, lineend = "butt"),
panel.background  = element_blank(),
axis.text.x  = element_blank(),
axis.text.y = element_text(size=15,color = "black"),
axis.line = element_line(colour="black"),
axis.ticks.x  = element_blank())+
xlab("633 Samples")+ylab("SS[>7 & <=8]  Count")+
theme(title=element_text(size=15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position = "bottom")+labs(fill = "HR Status ")+
scale_fill_manual(values = c("#e79686", "#716e77"))
dtwgs <- nmfwgs
dtwgs$sample <- rownames(dtwgs)
dtsnp <- nmfsnp
dtsnp$sample <- rownames(dtsnp)
dtpanel <- nmfpanel
dtpanel$sample <- rownames(dtpanel)
plot.roc(dtwgs$type, dtwgs$`SS[>7 & <=8]`, col = "#bc5148",
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="WGS: AUC = %.1f%%",
print.auc.y=30, print.auc.x = 65)
plot.roc(dtsnp$type, dtsnp$`SS[>7 & <=8]`, col = "#4a4266",
percent=T,thresholds="best",print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="SNP array: AUC = %.1f%%",
print.auc.y=25,  print.auc.x = 65, add=T)
plot.roc(dtpanel$type, dtpanel$`SS[>7 & <=8]`, col = "#549688",
percent=T,thresholds="best",print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Panel: AUC = %.1f%%",
print.auc.y=20, print.auc.x = 65, add=T)
### ROC
testall$sample <- rownames(testall)
plot.roc(testall$type, testall$`SS[>7 & <=8]`, col='#4a4266',
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Held-out Dataset: AUC = %.1f%%",
print.auc.y=25, print.auc.x=75)
trainall$sample <- rownames(trainall)
plot.roc(trainall$type, trainall$`SS[>7 & <=8]`, col="#bc5148",
percent=T,
print.thres = T,
lwd=2, print.auc=T, print.auc.cex=1, print.auc.pattern="Training Dataset: AUC = %.1f%%",
print.auc.y=20, print.auc.x=75, add=T)
### validation
#### count
nmfpanel <- tally_W_panel$nmf_matrix
reticulate::repl_python()
